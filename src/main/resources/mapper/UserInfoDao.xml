<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserInfoDao">
    <resultMap id="BaseResultMap" type="com.example.demo.domain.model.UserInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
        <result column="user_nickname" jdbcType="VARCHAR" property="userNickname"/>
        <result column="user_phone_number" jdbcType="INTEGER" property="userPhoneNumber"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="craete_date" jdbcType="TIMESTAMP" property="craeteDate"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, user_name, user_password, user_nickname, user_phone_number, user_email, 
    craete_date, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserName" parameterType="java.lang.String" resultType="com.example.demo.domain.model.UserInfo">
        select
        <include refid="Base_Column_List"/>
        from user_info
        where user_name = #{userName,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.domain.model.UserInfo"
            useGeneratedKeys="true">
    insert into user_info (user_id, user_name, user_password, 
      user_nickname, user_phone_number, user_email, 
      craete_date, update_time)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userPhoneNumber,jdbcType=INTEGER}, #{userEmail,jdbcType=VARCHAR}, 
      #{craeteDate,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>

    <insert id="insertAndGetId" parameterType="com.example.demo.domain.model.UserInfo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userNickname != null">
                user_nickname,
            </if>
            <if test="userPhoneNumber != null">
                user_phone_number,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="craeteDate != null">
                craete_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userNickname != null">
                #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userPhoneNumber != null">
                #{userPhoneNumber,jdbcType=INTEGER},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="craeteDate != null">
                #{craeteDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.demo.domain.model.UserInfo"
            useGeneratedKeys="true">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userNickname != null">
                user_nickname,
            </if>
            <if test="userPhoneNumber != null">
                user_phone_number,
            </if>
            <if test="userEmail != null">
                user_email,
            </if>
            <if test="craeteDate != null">
                craete_date,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userNickname != null">
                #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userPhoneNumber != null">
                #{userPhoneNumber,jdbcType=INTEGER},
            </if>
            <if test="userEmail != null">
                #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="craeteDate != null">
                #{craeteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.model.UserInfo">
        update user_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userNickname != null">
                user_nickname = #{userNickname,jdbcType=VARCHAR},
            </if>
            <if test="userPhoneNumber != null">
                user_phone_number = #{userPhoneNumber,jdbcType=INTEGER},
            </if>
            <if test="userEmail != null">
                user_email = #{userEmail,jdbcType=VARCHAR},
            </if>
            <if test="craeteDate != null">
                craete_date = #{craeteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.model.UserInfo">
    update user_info
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=INTEGER},
      user_email = #{userEmail,jdbcType=VARCHAR},
      craete_date = #{craeteDate,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>