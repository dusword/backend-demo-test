<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.LoginRecordDao">
    <resultMap id="BaseResultMap" type="com.example.demo.domain.model.LoginRecord">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="login_time" jdbcType="TIMESTAMP" property="loginTime"/>
        <result column="ip_address" jdbcType="VARCHAR" property="ipAddress"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, login_time, ip_address
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from login_record
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.demo.domain.model.LoginRecord"
            useGeneratedKeys="true">
    insert into login_record (user_id, login_time, ip_address
      )
    values (#{userId,jdbcType=INTEGER}, #{loginTime,jdbcType=TIMESTAMP}, #{ipAddress,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.example.demo.domain.model.LoginRecord" useGeneratedKeys="true">
        insert into login_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="loginTime != null">
                login_time,
            </if>
            <if test="ipAddress != null">
                ip_address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="loginTime != null">
                #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ipAddress != null">
                #{ipAddress,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.model.LoginRecord">
        update login_record
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="loginTime != null">
                login_time = #{loginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ipAddress != null">
                ip_address = #{ipAddress,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.model.LoginRecord">
    update login_record
    set user_id = #{userId,jdbcType=INTEGER},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      ip_address = #{ipAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>